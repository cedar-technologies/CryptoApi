openapi: 3.0.0
info:
  description: |
    [binance documentation on github](https://github.com/binance-exchange/binance-official-api-docs/blob/master/rest-api.md)
  version: 1.0.0
  title: Bitstamp API
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'https://www.bitstamp.net/api'
tags:
  - name: PUBLIC DATA FUNCTIONS
paths:
  /v2/ticker/{currency_pair}:
    get:
      tags:
        - PUBLIC DATA FUNCTIONS
      summary: Get Ticker Data
      operationId: GetTicker
      parameters:
        - $ref: '#/components/parameters/currencyPair'
      responses:
        '200':
          description: ticker
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ticker'
  /v2/ticker_hour/{currency_pair}:
    get:
      tags:
        - PUBLIC DATA FUNCTIONS
      summary: Get Hourly Ticker Data
      operationId: GetHourlyTickerList
      description: |
        Returns a JSON dictionary like the ticker call, with the calculated values being from within an hour.
      parameters:
        - $ref: '#/components/parameters/currencyPair'
      responses:
        '200':
          description: ticker
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ticker'
  /v2/order_book/{currency_pair}:
    get:
      tags:
        - PUBLIC DATA FUNCTIONS
      summary: Get Order book data
      operationId: GetOrderBook
      description: |
        Returns a JSON dictionary with "bids" and "asks". Each is a list of open orders and each order is represented as a list holding the price and the amount.
      parameters:
        - $ref: '#/components/parameters/currencyPair'
      responses:
        '200':
          description: orbder book list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderBookResponse'
  /v2/transactions/{currency_pair}:
    get:
      tags:
        - PUBLIC DATA FUNCTIONS
      summary: Get Transactions data
      operationId: GetTransactions
      description: |
        Returns a descending list of transactions.
      parameters:
        - $ref: '#/components/parameters/currencyPair'
        - $ref: '#/components/parameters/time'
      responses:
        '200':
          description: transaction list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transactionList'
  /v2/trading-pairs-info:
    get:
      tags:
        - PUBLIC DATA FUNCTIONS
      summary: Get Trading Pairs Data
      operationId: GetTradingPairs
      description: |
        Returns a list of trading pair info
      responses:
        '200':
          description: trading pair list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tradingPairList'
components:
  schemas:
    bid:
      type: array
      items:
        type: number
        format: double
      minItems: 2
      maxItems: 2
    orderBookResponse:
      type: object
      properties:
        timestamp:
          type: integer
          format: int64
          example: 1529360859
        bids:
          type: array
          items:
            $ref: '#/components/schemas/bid' 
      required:
        - timestamp
        - bids
    ticker:
      type: object
      properties:
        last:
          type: number
          format: double
          description:  Last BTC price.
        high:
          type: number
          format: double
          description:  Last 24 hours price high.
        low:
          type: number
          format: double
          description:  Last 24 hours price low.
        vwap:
          type: number
          format: double
          description:  Last 24 hours volume weighted average price.
        volume:
          type: number
          format: double
          description:  Last 24 hours volume.
        bid:
          type: number
          format: double
          description:  Highest buy order.
        ask:
          type: number
          format: double
          description:  Lowest sell order.
        timestamp:
          type: integer
          format: in64
          description:  Unix timestamp date and time.
        open:
          type: number
          format: double
          description:  First price of the day.
      required:
        - last
        - high
        - low
        - vwap
        - volume
        - bid
        - ask
        - timestamp
        - open
    tradingPairList:
      type: array
      items:
        $ref: '#/components/schemas/tradingPair' 
    tradingPair:
      properties:
        name:
          type: string
          description: Trading pair.
        url_symbol:
          type: string
          description: URL symbol of trading pair.
        base_decimals:
          type: integer
          description: Decimal precision for base currency (BTC/USD - base':' BTC).
        counter_decimals:
          type: integer
          description: Decimal precision for counter currency (BTC/USD - counter':' USD).
        minimum_order:
          type: string
          description: Minimum order size.
        trading:
          type: string
          enum:
            - Enabled
            - Disabled
          description: Trading engine status (Enabled/Disabled).
        description:
          type: string
          description: Trading pair description.
      required:
        - name
        - url_symbol
        - base_decimals
        - counter_decimals
        - minimum_order
        - trading
        - description
    transactionList:
      type: array
      items:
        $ref: '#/components/schemas/transaction'
    transaction:
      properties:
        date:
          type: integer
          format: int64
          description: Unix timestamp date and time.
        tid:
          type: integer
          format: int64
          description: Transaction ID.
        price:
          type: number
          format: double
          description: BTC price.
        amount:
          type: number
          format: double
          description: BTC amount.
        type:
          type: integer
          minimum: 0
          maximum: 1
      required:
        - date
        - tid
        - price
        - amount
        - type
  parameters:
    currencyPair:
      in: path
      name: currency_pair
      required: true
      schema:
        type: string
        description: Supported values for currency_pair':' btcusd, btceur, eurusd, xrpusd, xrpeur, xrpbtc, ltcusd, ltceur, ltcbtc, ethusd, etheur, ethbtc, bchusd, bcheur, bchbtc
    time:
      in: query
      name: time
      schema:
        type: string
        enum:
          - minute
          - hour
          - day
