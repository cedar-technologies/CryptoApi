openapi: 3.0.0
info:
  description: 'Bittrex provides a simple and powerful REST API to allow you to programatically perform nearly all actions you can from our web interface. All requests use the application/json content type and go over https. The base url is https://bittrex.com/api/{version}/. All requests are GET requests and all responses come in a default response object with the result in the result field. Always check the success flag to ensure that your API call succeeded.'
  version: 1.0.0
  title: Bittrex API
  contact:
    email: alexandre.jx@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'https://bittrex.com/api/v1.1'
tags:
  - name: Public
    description: Public information available without an API key
  - name: Market
    description: For programmatic trading of crypto currencies
  - name: Account
    description: For managing your account
paths:
  /public/getmarkets:
    get:
      tags:
        - Public
      summary: Market Meta Data
      operationId: getMarkets
      description: |
        Used to get the open and available trading markets at Bittrex along with other meta data.
      responses:
        '200':
          description: Markets data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/marketListResult'
  /public/getcurrencies:
    get:
      tags:
        - Public
      summary: Currency Meta Data
      operationId: getCurrencies
      description: |
        Used to get all supported currencies at Bittrex along with other meta data.
      responses:
        '200':
          description: Currencies data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/currencyListResult'
  /public/getticker:
    get:
      tags:
        - Public
      summary: Get Ticker
      operationId: getTicker
      description: |
        Used to get the current tick values for a market.
      parameters:
        - $ref: '#/components/parameters/market'
      responses:
        '200':
          description: ticker data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tickerResult'
  /public/getmarketsummaries:
    get:
      tags:
        - Public
      summary: Get Market Summary
      operationId: getMarketSummaries
      description: |
        Used to get the last 24 hour summary of all active markets
      responses:
        '200':
          description: market summaries data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/marketSummariesResult'
  /public/getmarketsummary:
    get:
      tags:
        - Public
      summary: Get Market Summary
      operationId: getMarketSummary
      description: |
        Used to get the last 24 hour summary of a specific market.
      parameters:
        - $ref: '#/components/parameters/market'
      responses:
        '200':
          description: market summary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/marketSummaryResult'
  /public/getorderbook:
    get:
      tags:
        - Public
      summary: Get Order Book
      operationId: getOrderBook
      description: |
        Used to get retrieve the orderbook for a given market.
      parameters:
        - $ref: '#/components/parameters/market'
        - in: query
          name: type
          description: 'buy, sell or both to identify the type of orderbook to return'
          schema:
            type: string
            enum:
              - buy
              - sell
              - both
      responses:
        '200':
          description: order book data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderBookResult'
  /public/getmarkethistory:
    get:
      tags:
        - Public
      summary: Get Market History
      operationId: getMarketHistory
      description: |
        Used to retrieve the latest trades that have occured for a specific market.
      parameters:
        - $ref: '#/components/parameters/market'
      responses:
        '200':
          description: order book data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/marketHistoryResult'
  /market/buylimit:
    get:
      tags:
        - Market
      summary: place a buy order.
      operationId: placeBuyOrder
      description: |
        Used to place a buy order in a specific market. Use buylimit to place limit orders. Make sure you have the proper permissions set on your API keys for this call to work.
      parameters:
        - $ref: '#/components/parameters/apisign'
        - $ref: '#/components/parameters/apikey'
        - $ref: '#/components/parameters/market'
        - $ref: '#/components/parameters/quantity'
        - $ref: '#/components/parameters/rate'
      responses:
        '200':
          description: Returns you the order uuid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderPlacedResult'
  /market/selllimit:
    get:
      tags:
        - Market
      summary: place a sell order.
      operationId: placeSellOrder
      description: |
        Used to place an sell order in a specific market. Use selllimit to place limit orders. Make sure you have the proper permissions set on your API keys for this call to work.
      parameters:
        - $ref: '#/components/parameters/apisign'
        - $ref: '#/components/parameters/apikey'
        - $ref: '#/components/parameters/market'
        - $ref: '#/components/parameters/quantity'
        - $ref: '#/components/parameters/rate'
      responses:
        '200':
          description: Returns you the order uuid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderPlacedResult'
  /market/cancel:
    get:
      tags:
        - Market
      summary: Cancel an order
      operationId: cancelOrder
      description: |
        Used to cancel a buy or sell order.
      parameters:
        - $ref: '#/components/parameters/apisign'
        - $ref: '#/components/parameters/apikey'
        - $ref: '#/components/parameters/orderuuid'
      responses:
        '200':
          description: Returns you the order uuid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderCanceledResult'
  /market/getopenorders:
    get:
      tags:
        - Market
      summary: Get open orders
      operationId: getOpenOrders
      description: |
        Get all orders that you currently have opened. A specific market can be requested.
      parameters:
        - $ref: '#/components/parameters/apisign'
        - $ref: '#/components/parameters/apikey'
        - $ref: '#/components/parameters/marketOptional'
      responses:
        '200':
          description: Returns you the order uuid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderListResult'
  /account/getbalances:
    get:
      tags:
        - Account
      summary: Get Balances.
      operationId: getBalanceList
      description: |
        Used to retrieve all balances from your account
      parameters:
        - $ref: '#/components/parameters/apisign'
        - $ref: '#/components/parameters/apikey'
      responses:
        '200':
          description: balances data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/balanceListResult'
  /account/getbalance:
    get:
      tags:
        - Account
      summary: Get Balance.
      operationId: getBalance
      description: |
        Used to retrieve the balance from your account for a specific currency.
      parameters:
        - $ref: '#/components/parameters/apisign'
        - $ref: '#/components/parameters/apikey'
        - $ref: '#/components/parameters/currency'
      responses:
        '200':
          description: balance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/balanceResult'
  /account/getdepositaddress:
    get:
      tags:
        - Account
      summary: Get Deposit Address.
      operationId: getDepositAddress
      description: |
        Used to retrieve or generate an address for a specific currency. If one does not exist, the call will fail and return ADDRESS_GENERATING until one is available.
      parameters:
        - $ref: '#/components/parameters/apisign'
        - $ref: '#/components/parameters/apikey'
        - $ref: '#/components/parameters/currency'
      responses:
        '200':
          description: balance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/depositAddressResult'
  /account/withdraw:
    get:
      tags:
        - Account
      summary: withdraw fund.
      operationId: withdraw
      description: |
        Used to withdraw funds from your account. Note: please account for txfee.
      parameters:
        - $ref: '#/components/parameters/apisign'
        - $ref: '#/components/parameters/apikey'
        - $ref: '#/components/parameters/currency'
        - $ref: '#/components/parameters/quantity'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/paymentid'
      responses:
        '200':
          description: balance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/depositAddressResult'
  /account/getorder:
    get:
      tags:
        - Account
      summary: Get Order By Id.
      operationId: getOrder
      description: |
        Used to retrieve a single order by uuid.
      parameters:
        - $ref: '#/components/parameters/apisign'
        - $ref: '#/components/parameters/apikey'
        - $ref: '#/components/parameters/orderuuid'
      responses:
        '200':
          description: balance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderResult'
  /account/getorderhistory:
    get:
      tags:
        - Account
      summary: Get a collection of orders.
      operationId: getOrderList
      description: |
        Used to retrieve your order history.
      parameters:
        - $ref: '#/components/parameters/apisign'
        - $ref: '#/components/parameters/apikey'
        - $ref: '#/components/parameters/marketOptional'
      responses:
        '200':
          description: balance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderListResult'
  /account/getwithdrawalhistory:
    get:
      tags:
        - Account
      summary: Get a collection of orders.
      operationId: getWithdrawList
      description: |
        Used to retrieve your order history.
      parameters:
        - $ref: '#/components/parameters/apisign'
        - $ref: '#/components/parameters/apikey'
        - $ref: '#/components/parameters/currency'
      responses:
        '200':
          description: balance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/operationHistoryResult'
  /account/getdeposithistory:
    get:
      tags:
        - Account
      summary: Get a collection of orders.
      operationId: getDepositList
      description: |
        Used to retrieve your order history.
      parameters:
        - $ref: '#/components/parameters/apisign'
        - $ref: '#/components/parameters/apikey'
        - $ref: '#/components/parameters/currency'
      responses:
        '200':
          description: balance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/operationHistoryResult'
components:
  schemas:
    balance:
      type: object
      properties:
        Currency:
          type: string
          example: DOGE
        Balance:
          type: number
          format: double
          example: 12.02
        Available:
          type: number
          format: double
          example: 12.02
        Pending:
          type: number
          format: double
          example: 12.02
        CryptoAddress:
          type: string
          example: DLxcEt3AatMyr2NTatzjsfHNoB9NT62HiF
        Requested:
          type: boolean
          example: false
        Uuid:
          type: string
      required:
        - Currency
        - Balance
        - Available
        - Pending
        - CryptoAddress
        - Requested
    balanceListResult:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: ''
        result:
          type: array
          items:
            $ref: '#/components/schemas/balance'
    balanceResult:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: ''
        result:
          $ref: '#/components/schemas/balance'
    currencyListResult:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: ''
        result:
          type: array
          items:
            $ref: '#/components/schemas/currency'
      required:
        - success
        - message
        - result
    currency:
      type: object
      properties:
        Currency:
          type: string
          example: BTC
        CurrencyLong:
          type: string
          example: Bitcoin
        MinConfirmation:
          type: integer
          format: int32
          example: 2
        TxFee:
          type: number
          format: double
          example: 0.0002
        IsActive:
          type: boolean
          example: true
        CoinType:
          type: string
          example: BITCOIN
        BaseAddress:
          type: string
          format: uri
      required:
        - Currency
        - CurrencyLong
        - MinConfirmation
        - TxFee
        - IsActive
        - CoinType
        - BaseAddress
    depositAddress:
      type: object
      properties:
        Currency:
          type: string
          example: VTC
        Address:
          type: string
          example: Vy5SKeKGXUHKS2WVpJ76HYuKAu3URastUo
    depositAddressResult:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: ''
        result:
          type: array
          items:
            $ref: '#/components/schemas/depositAddress'
    market:
      type: object
      properties:
        MarketCurrency:
          type: string
          example: 'LTC,'
        BaseCurrency:
          type: string
          example: 'BTC,'
        MarketCurrencyLong:
          type: string
          example: 'Litecoin,'
        BaseCurrencyLong:
          type: string
          example: 'Bitcoin,'
        MinTradeSize:
          type: number
          format: double
          example: '0.01000000,'
        MarketName:
          type: string
          example: 'BTC-LTC,'
        IsActive:
          type: boolean
          example: 'true,'
        Created:
          type: string
          format: date-time
          example: 2014-02-13T00:00:00.000Z
      required:
        - MarketCurrency
        - BaseCurrency
        - MarketCurrencyLong
        - BaseCurrencyLong
        - MinTradeSize
        - MarketName
        - IsActive
        - Created
    marketHistoryResult:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: ''
        result:
          type: array
          items:
            $ref: '#/components/schemas/trade'
      required:
        - success
        - message
        - result
    marketListResult:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: ''
        result:
          type: array
          items:
            $ref: '#/components/schemas/market'
      required:
        - success
        - message
        - result
    marketSummariesResult:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: ''
        result:
          type: array
          items:
            $ref: '#/components/schemas/marketSummary'
      required:
        - success
        - message
        - result
    marketSummary:
      type: object
      properties:
        MarketName:
          type: string
          example: BTC-888
        High:
          type: number
          format: double
          example: 0.00000919
        Low:
          type: number
          format: double
          example: 0.0000082
        Volume:
          type: number
          format: double
          example: 74339.61396015
        Last:
          type: number
          format: double
          example: 0.0000082
        BaseVolume:
          type: number
          format: double
          example: 0.64966963
        TimeStamp:
          type: string
          format: date-time
          example: 2014-07-09T07:19:30.150Z
        Bid:
          type: number
          format: double
          example: 0.0000082
        Ask:
          type: number
          format: double
          example: 0.00000831
        OpenBuyOrders:
          type: integer
          format: int32
          example: 15
        OpenSellOrders:
          type: integer
          format: int32
          example: 15
        PrevDay:
          type: number
          format: double
          example: 0.00000821
        Created:
          type: string
          format: date-time
          example: '2014-03-20T06:00:00,'
        DisplayMarketName:
          type: string
      required:
        - MarketName
        - High
        - Low
        - Volume
        - Last
        - BaseVolume
        - TimeStamp
        - Bid
        - Ask
        - OpenBuyOrders
        - OpenSellOrders
        - PrevDay
        - Created
    marketSummaryResult:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: ''
        result:
          type: array
          items:
            $ref: '#/components/schemas/marketSummary'
      required:
        - success
        - message
        - result
    order:
      type: object
      properties:
        Uuid:
          type: string
        OrderUuid:
          type: string
          format: uuid
          example: 09aa5bb6-8232-41aa-9b78-a5a1093e0211
        Exchange:
          type: string
          example: BTC-LTC
        OrderType:
          type: string
          example: LIMIT_SELL
        Quantity:
          type: number
          format: double
          example: 5
        QuantityRemaining:
          type: number
          format: double
          example: 5
        Limit:
          type: number
          format: double
          example: 2
        CommissionPaid:
          type: number
          format: double
          example: 0
        Price:
          type: number
          format: double
          example: 0
        PricePerUnit:
          type: number
          format: double
        Opened:
          type: string
          format: date-time
          example: 2014-07-09T03:55:48.770Z
        Closed:
          type: string
        CancelInitiated:
          type: boolean
          example: false
        ImmediateOrCancel:
          type: boolean
          example: false
        IsConditional:
          type: boolean
          example: false
        Condition:
          type: string
        ConditionTarget:
          type: string
      required:
        - Uuid
        - OrderUuid
        - Exchange
        - OrderType
        - Quantity
        - QuantityRemaining
        - Limit
        - CommissionPaid
        - Price
        - Opened
        - CancelInitiated
        - ImmediateOrCancel
        - IsConditional
    orderBook:
      type: object
      properties:
        buy:
          type: array
          items:
            $ref: '#/components/schemas/orderSummary'
        sell:
          type: array
          items:
            $ref: '#/components/schemas/orderSummary'
    orderBookResult:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: ''
        result:
          $ref: '#/components/schemas/orderBook'
      required:
        - success
        - message
        - result
    orderCanceledResult:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: ''
      required:
        - success
        - message
    orderListResult:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: ''
        result:
          type: array
          items:
            $ref: '#/components/schemas/order'
      required:
        - success
        - message
    orderPlacedResult:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: ''
        result:
          $ref: '#/components/schemas/orderPlaced'
      required:
        - success
        - message
    orderPlaced:
      properties:
        uuid:
          description: order unique identifier
          type: string
          format: uuid
          example: 614c34e4-8d71-11e3-94b5-425861b86ab6
      required:
        - uuid
    orderResult:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: ''
        result:
          $ref: '#/components/schemas/order'
      required:
        - success
        - message
    orderSummary:
      type: object
      properties:
        Quantity:
          type: number
          format: double
          example: 32.55412402
        Rate:
          type: number
          format: double
          example: 0.0254
      required:
        - Quantity
        - Rate
    ticker:
      type: object
      properties:
        Bid:
          type: number
          format: double
          example: 2.05670368
        Ask:
          type: number
          format: double
          example: 3.35579531
        Last:
          type: number
          format: double
          example: 3.35579531
      required:
        - Bid
        - Ask
        - Last
    tickerResult:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: ''
        result:
          $ref: '#/components/schemas/ticker'
      required:
        - success
        - message
        - result
    trade:
      type: object
      properties:
        Id:
          type: integer
          format: Int32
          example: 319435
        TimeStamp:
          type: string
          format: date-time
          example: 2014-07-09T03:21:20.080Z
        Quantity:
          type: number
          format: double
          example: 0.30802438
        Price:
          type: number
          format: double
          example: 0.012634
        Total:
          type: number
          format: double
          example: 0.00389158
        FillType:
          type: string
          enum:
            - FILL
            - PARTIAL_FILL
        OrderType:
          type: string
          enum:
            - BUY
            - SELL
      required:
        - Id
        - TimeStamp
        - Quantity
        - Price
        - Total
        - FillType
        - OrderType
    operation:
      type: object
      properties:
        PaymentUuid:
          type: string
          format: uuid
          example: b52c7a5c-90c6-4c6e-835c-e16df12708b1
        Currency:
          type: string
          example: BTC
        Amount:
          type: number
          format: double
          example: 17
        Address:
          type: string
          example: 1DeaaFBdbB5nrHj87x3NHS4onvw1GPNyAu
        Opened:
          type: string
          format: date-time
          example: 2014-07-09T04:24:47.217Z
        Authorized:
          type: boolean
          example: true
        PendingPayment:
          type: boolean
          example: false
        TxCost:
          type: number
          format: double
          example: 0.0002
        TxId:
          type: string
        Canceled:
          type: boolean
          example: true
        InvalidAddress:
          type: boolean
          example: false
      required:
        - properties
        - PaymentUuid
        - Currency
        - Amount
        - Address
        - Opened
        - Authorized
        - PendingPayment
        - TxCost
        - TxId
        - Canceled
        - InvalidAddress
    operationHistoryResult:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: ''
        result:
          type: array
          items:
            $ref: '#/components/schemas/operation'
      required:
        - success
        - message
  parameters:
    apisign:
      name: apisign
      in: header
      required: true
      schema:
        type: string
    apikey:
      name: apikey
      in: query
      required: true
      description: Bittrex Api Key
      schema:
        type: string
    currency:
      name: currency
      in: query
      required: true
      description: a string literal for the market (e.g. BTC-LTC)
      example: BTC-LTC
      schema:
        type: string
    market:
      name: market
      in: query
      required: true
      description: a string literal for the market (e.g. BTC-LTC)
      example: BTC-LTC
      schema:
        type: string
    marketOptional:
      name: market
      in: query
      description: a string literal for the market (e.g. BTC-LTC)
      example: BTC-LTC
      schema:
        type: string
    orderuuid:
      name: uuid
      in: query
      required: true
      description: uuid of buy or sell order
      example: 614c34e4-8d71-11e3-94b5-425861b86ab6
      schema:
        type: string
        format: uuid
    quantity:
      name: quantity
      in: query
      required: true
      description: the amount to purchase
      example: 5.1
      schema:
        type: number
        format: double
    rate:
      name: rate
      in: query
      required: true
      description: the rate at which to place the order
      example: 5.1
      schema:
        type: number
        format: double
    address:
      name: address
      in: query
      required: true
      description: the address where to send the funds
      example: Vy5SKeKGXUHKS2WVpJ76HYuKAu3URastUo
      schema:
        type: string
    paymentid:
      name: paymentid
      in: query
      description: used for CryptoNotes/BitShareX/Nxt/XRP and any other coin that has a memo/message/tag/paymentid option
      schema:
        type: string
